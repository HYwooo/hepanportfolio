name: Build and Deploy Portfolio Dashboard

on:
  workflow_dispatch:
  schedule:
    - cron: '0 11 * * *' # 每天 UTC 时间 11:00 运行

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate-report:
    runs-on: ubuntu-latest
    
    # 使用你在 GHCR 上的预构建容器作为此作业的运行环境
    container:
      image: ghcr.io/HYwooo/portfolio-reporter:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache data directory
        uses: actions/cache@v4
        with:
          # 容器内的代码检出路径是 /github/workspace
          path: /github/workspace/data_cache
          key: ${{ runner.os }}-data-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-data-

      - name: Run Python script to generate report
        env:
          ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}
        # 这个命令在上面定义的 container 内部执行
        run: python generate_report.py
        
      - name: Commit and push generated files
        run: |
          # 配置 git
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # 因为容器的用户与仓库的所有者不同，需要将工作目录标记为安全
          git config --global --add safe.directory /github/workspace
          
          # 添加所有生成的文件和缓存
          git add pages/ data_cache/
          
          # 检查是否有变动，如果有则提交并推送
          if ! git diff --staged --quiet; then
            git commit -m "ci: Update report and data cache"
            git push
          else
            echo "No changes to commit."
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './pages'

  deploy:
    needs: generate-report
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4