name: Build and Deploy Portfolio Dashboard

on:
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * *'
  #push:
  #  branches: [ "main", "master" ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache data directory
        uses: actions/cache@v4
        with:
          path: data_cache
          key: ${{ runner.os }}-data-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-data-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # --- 新增步骤: 安装 Playwright 浏览器 ---
      - name: Install Playwright Browsers
        run: playwright install --with-deps
      
      - name: Run Python script to generate report and PNG
        env:
          ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}
        run: python generate_report.py
        
      - name: Commit and push if changed
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 注意：检查文件是否存在
          if [ -f ./pages/index.html ]; then
            git add ./pages/index.html
            git diff --staged --quiet || git commit -m "ci: Update portfolio dashboard."
            git push
          else
            echo "./pages/index.html not found, skipping commit."
          fi
          # 同时处理可能的截图
          if [ -f ./pages/portfolio_chart.png ]; then
            git add ./pages/portfolio_chart.png
            git diff --staged --quiet || git commit -m "ci: Update portfolio screenshot."
            git push
          fi
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # --- 修改: 上传所有生成的文件 (HTML 和 PNG) ---
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 上传整个仓库的内容
          path: './pages'

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
